import{_ as s,o as n,c as a,a as l}from"./app.73a4cc9d.js";const p="/Portfolio/assets/vulkan_logo.13ebae1c.png",e="/Portfolio/assets/vulkan_includes.21fc3b58.png",o="/Portfolio/assets/vulkan_libs.ed719e89.png",r="/Portfolio/assets/vulkan_libs2.9816d654.png",d=JSON.parse('{"title":"Setting up Vulkan.","description":"","frontmatter":{"prev":"Introduction to Vulkan"},"headers":[{"level":2,"title":"Requirements","slug":"requirements","link":"#requirements","children":[]},{"level":2,"title":"Testing Vulkan","slug":"testing-vulkan","link":"#testing-vulkan","children":[]}],"relativePath":"Vulkan/setup.md"}'),t={name:"Vulkan/setup.md"},c=l('<p><img src="'+p+'" alt="Vulkan Logo"></p><p><br><br></p><h1 id="setting-up-vulkan" tabindex="-1">Setting up Vulkan. <a class="header-anchor" href="#setting-up-vulkan" aria-hidden="true">#</a></h1><p>This tutorial will assume you can set up your own development environment, as my main development platform is Windows I will be using Visual Studio 2022 for these projects.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-hidden="true">#</a></h2><ul><li><a href="https://www.lunarg.com/vulkan-sdk/" target="_blank" rel="noreferrer">LunarG SDK development kit</a></li><li><a href="https://visualstudio.microsoft.com" target="_blank" rel="noreferrer">Clang/GCC/MSVC</a></li><li><a href="https://www.glfw.org/download.html" target="_blank" rel="noreferrer">GLFW</a></li><li><a href="https://github.com/g-truc/glm" target="_blank" rel="noreferrer">GLM</a></li><li>Knowledge of C++</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Be sure to put GLFW, GLM and LunarG somewhere central on your system, as most projects will refer to these directories on your system</p></div><h2 id="testing-vulkan" tabindex="-1">Testing Vulkan <a class="header-anchor" href="#testing-vulkan" aria-hidden="true">#</a></h2><p>Make an empty C++ project and link to the correct libs and header files, exmaple can be seen down below</p><p><img src="'+e+'" alt="Vulkan includes"><br><br><img src="'+o+'" alt="Vulkan lib location"><br><br><img src="'+r+`" alt="Vulkan libs"></p><p>By running this code we can test if the program compiles correctly.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// Tell glfw to include Vulkan support</span></span>
<span class="line"><span style="color:#89DDFF;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GLFW_INCLUDE_VULKAN</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">GLFW/glfw3.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GLM_FORCE_RADIANS</span></span>
<span class="line"><span style="color:#676E95;">// Redefine buffer depth</span></span>
<span class="line"><span style="color:#89DDFF;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GLM_FORCE_DEPTH_ZERO_TO_ONE</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">glm/vec4.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">glm/mat4x4.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">glfwInit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Tell GLFW that we are using no API (otherwise it will use GDI)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">glfwWindowHint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">GLFW_CLIENT_API</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> GLFW_NO_API</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    GLFWwindow</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> window </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">glfwCreateWindow</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">800</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Vulkan window</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Request the amount of extensions found</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> extensionCount </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">vkEnumerateInstanceExtensionProperties</span><span style="color:#89DDFF;">(nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">extensionCount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> extensionCount </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> extensions supported</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // GLM tests</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">glm</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mat4 matrix</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">glm</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">vec4 vec</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> test </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> matrix </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> vec</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">glfwWindowShouldClose</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwPollEvents</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">glfwDestroyWindow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">glfwTerminate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div>`,12),i=[c];function D(F,y,u,C,A,b){return n(),a("div",null,i)}const g=s(t,[["render",D]]);export{d as __pageData,g as default};
